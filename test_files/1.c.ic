  Procedure: main
  Intermediate Code Statements
	iLoad:    	v0 <- 1
	load:    	t0 <- a
	add:    	t1 <- v0 , t0
	addi:    	sp <- sp , -4
	store:    	sp <- v0
	addi:    	sp <- sp , -4
	store:    	sp <- a0
	addi:    	sp <- sp , -8
	store.d:    	sp <- f12
	move:    	a0 <- t1
	iLoad:    	v0 <- 1
	syscall 
	load.d:    	f12 <- sp
	addi:    	sp <- sp , 8
	load:    	a0 <- sp
	addi:    	sp <- sp , 4
	load:    	v0 <- sp
	addi:    	sp <- sp , 4
	iLoad:    	v0 <- 1
	addi:    	sp <- sp , -4
	store:    	sp <- v0
	addi:    	sp <- sp , -4
	store:    	sp <- a0
	addi:    	sp <- sp , -8
	store.d:    	sp <- f12
	move:    	a0 <- v0
	iLoad:    	v0 <- 1
	syscall 
	load.d:    	f12 <- sp
	addi:    	sp <- sp , 8
	load:    	a0 <- sp
	addi:    	sp <- sp , 4
	load:    	v0 <- sp
	addi:    	sp <- sp , 4
	call one
	move:    	v0 <- v1
	store:    	a <- v0
	return
  Procedure: one
  Intermediate Code Statements
	iLoad:    	v0 <- 1
	move:    	v1 <- v0
	return
